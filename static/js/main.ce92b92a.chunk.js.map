{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","placeholder","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","newtext","charAt","slice","split","length","capitalize","word","lower","Alert","alert","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","component_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ce92b92a.chunk.js","sourcesContent":["//I need a react function based comp. --> rfc\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n        </li>\r\n       \r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\n// Navbar.propTypes={title: PropTypes.string,\r\n//                   aboutText: PropTypes.string}\r\n\r\n//should there be a tilt not any prop should be undefined:\r\nNavbar.propTypes={title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string}                  ","import React, {useState} from 'react'\r\n\r\n//use ful piece of code : \r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        console.log(\"Uppercase was Clicked\"+text); //just for debugging!!\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase!\",\"success\");\r\n\r\n    }\r\n\r\n    const handleOnChange=(event)=>{\r\n        console.log(\"On Change\"); //just for debugging!!\r\n        setText(event.target.value);\r\n        \r\n    }\r\n\r\n    const handleLoClick=()=>{\r\n        console.log(\"Lowercase was Clicked\"+text); //just for debugging!!\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase!\",\"success\");\r\n\r\n    }\r\n\r\n    const handleClearClick=()=>{\r\n        console.log(\"Clear Text was clicked\"+text); //just for debugging!!\r\n        let newText='';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\",\"success\");\r\n\r\n\r\n    }\r\n\r\n    const handleSenCaseClick=()=>{\r\n        console.log(\"Sentence Case was Clicked\"+text); //just for debugging!!\r\n        let newtext = text.charAt(0).toUpperCase( )+ text.slice(1);\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to Sentence Case!\",\"success\");\r\n\r\n\r\n    }\r\n\r\n   \r\n\r\n    \r\n    const [text,setText]=useState(\"\");\r\n    //wrong way to updae text: text =\"new text\";\r\n    //setText(\"new text\");//correct way\r\n  return (\r\n    <>\r\n    <div className='container' style={{color: props.mode==='dark'?'white':'grey'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'grey'}} id=\"myBox\" rows=\"10\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleSenCaseClick}>Sentence Case</button>\r\n\r\n    </div>\r\n    <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'grey'}}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008*text.split(\" \").length} Minutes to read text</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the text field\"}</p>\r\n    </div>\r\n    </>\r\n\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nconst capitalize=(word)=>{\r\n    const lower=word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n  }\r\n\r\nfunction Alert(props) {\r\n\r\n  return (\r\n   \r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        \r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Alert\r\n\r\n","import './App.css';\nimport Navbar from './component/Navbar';\n//import About from './component/About';\nimport TextForm from './component/TextForm';\nimport { useState } from 'react';\nimport Alert from './component/Alert';\n\nimport React from 'react'\n// import ReactDOM from 'react-dom'\n\n// import{\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode,setMode]=useState('light'); //whether darkmode is enabeled or not\n \n  const [alert,setAlert]=useState(null);\n\n  const showAlert=(message,type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 1500);\n  }\n  \n  const toggleMode=()=>{\n      if(mode==='light'){\n        setMode ('dark');\n        document.body.style.backgroundColor='#1b2036';\n        showAlert(\"Dark mode has been enabeled\",\"success\");\n        document.title='My_App1 - Dark Mode';\n      }\n      else{\n        setMode('light');\n        document.body.style.backgroundColor='white';\n        showAlert(\"Light mode has been enabeled\",\"success\");\n        document.title='My_App1 - Light Mode';\n      }\n\n  }\n  //jsx fragment to return just one tag!!!\n  //<> </>\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"App_1\" mode={mode} aboutText=\"About App_1\" toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Routes>\n          <Route exact path=\"/about\" element={<About/>}/>\n          <Route exact path=\"/\" element={ */}\n          <TextForm showAlert={showAlert} heading=\"Enter your text to convert \" mode={mode}/>\n{/* }/> */}\n    {/* </Routes> */}\n    </div>\n\n    {/* </Router> */}\n    </>\n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}